name: Test container creation and push

on:
  push:
    branches-ignore:
        - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ID: ${{ github.sha }}

jobs:
  generate_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - run: echo repository checked out
        

      - name: Container registry login
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo Logged in to registry

      - name: Extract metadata (tags, labels) for Test image
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,format=long
            
      - run: echo Extracted metadata


      - name: Build and push Test image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - run: echo Pushed test container

  containertesting:
    needs: generate_image
    runs-on: ubuntu-latest
    services:
        # Label used to access the service container
        server_container:
          # Docker Hub image
          image: ghcr.io/teresebo/webb22_alm_cicd:sha-${{ github.sha }}
          #
          ports:
            # Opens tcp port 8080 on the host and service container
            - 3000:3000

            
    steps:
        - name: Checkout repository
          uses: actions/checkout@v3
  
        - name: Use Node.js 
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - run: npm install

      
        
        - name: Smoke test with curl
          run: curl http://localhost:8080
  
        - name: supertest
          run: npm run supertest

